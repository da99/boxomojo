#!/usr/bin/env bash
# -*- bash -*-
#
#
if [[ -z "$1" ]]; then
  action="watch"
else
  action="$1"
  shift
fi

set -u -e -o pipefail


case "$action" in

  "help")
    echo " ====================================================="
    echo ""
    echo " $  boxomojo   watch"
    echo ""
    echo " $  boxomojo   test"
    echo " $  boxomojo   test   name"
    echo ""
    echo " ====================================================="
    echo ""
    exit 0
    ;;  # === start

  "watch")
    echo "=== Watching: "
    bin/boxomojo test "$@" || true

    inotifywait -q --exclude .git/ -e close_write,close -m -r .  | while read CHANGE
    do
      dir=$(echo "$CHANGE" | cut -d' ' -f 1)
      op=$(echo "$CHANGE" | cut -d' ' -f 2)
      file=$(echo "$CHANGE" | cut -d' ' -f 3)
      path="${dir}$file"

      if [[ ( ! "$op" =~ "NOWRITE" ) && ( "$op" =~ "CLOSE" || "$op" =~ "WRITE" )  && ! -z "$file" ]]
      then
        echo ""
        if [[ "$file" == *.js* ]]; then
          echo ""
          echo "=== Runninig jshint on $path: $CHANGE"
          (jshint "$path" && echo "No errors.") || true
        fi

        if [[ "$path" == *bin/boxomojo* ]]; then
          echo ""
          echo "=== Restarting:"
          exec $path "watch" "$@"
        fi

        if [[ "$path" == *.rb* ]]; then
          echo "=== Running tests: $@"
          bin/boxomojo test "$@" || true
        fi
      fi # === if file op

    done

    ;; # === watch

  "test")
    files=""
    if [[ ! -z "$@" ]]; then
      files="$(echo -n specs/*-$1.rb)"
      if [[ -f "$files" ]]; then
        shift
      else
        files=""
      fi
    fi

    if [[ -z "$files" ]]; then
      files="$(echo -n specs/*.rb | tr ' ' '\n' | sort)"
    fi

    if [[ -z "$files" ]]; then
      colorize yellow "No tests found." 1>&2
      exit 0
    else
      bundle exec bacon specs/lib/helpers.rb $files "$@"
    fi
    ;; # === test

  *)
    echo "=== Unknown action: $action" 1>&2
    exit 1
    ;;

esac
